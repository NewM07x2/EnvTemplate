# Django Backend Dockerfile

FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --upgrade pip && \
    pip install -r requirements.txt

# Copy project files
COPY . .

# Collect static files (will be run in entrypoint if needed)
# RUN python manage.py collectstatic --noinput

# Create entrypoint script (checks AUTO_MIGRATE env var)
RUN echo '#!/bin/bash\n\
    set -e\n\
    \n\
    echo "Waiting for PostgreSQL..."\n\
    while ! pg_isready -h ${DB_HOST:-db} -p ${DB_PORT:-5432} -U ${DB_USER:-django_user}; do\n\
    sleep 1\n\
    done\n\
    echo "PostgreSQL is ready!"\n\
    \n\
    if [ "${AUTO_MIGRATE:-true}" = "true" ]; then\n\
    echo "Running migrations..."\n\
    if ! python manage.py migrate --noinput; then\n\
    echo "WARNING: migrate failed. Starting app without applying migrations." >&2\n\
    fi\n\
    else\n\
    echo "AUTO_MIGRATE is disabled; skipping migrations."\n\
    fi\n\
    \n\
    echo "Collecting static files..."\n\
    python manage.py collectstatic --noinput || true\n\
    \n\
    echo "Starting server..."\n\
    exec "$@"' > /entrypoint.sh && chmod +x /entrypoint.sh

ENTRYPOINT ["/entrypoint.sh"]
# Default command
CMD ["gunicorn", "config.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "4", "--timeout", "120"]
